CREATE TABLE Users
(id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
 email VARCHAR(256) NOT NULL UNIQUE,
 password VARCHAR(256) NOT NULL,
 firstname VARCHAR(256) NOT NULL,
 lastname VARCHAR(256) NOT NULL,
 address VARCHAR(256) NOT NULL,
 balance DECIMAL NOT NULL
);

CREATE TABLE Sellers
(seller_id INTEGER NOT NULL PRIMARY KEY REFERENCES Users(id)
);

CREATE TABLE Category
(category VARCHAR NOT NULL PRIMARY KEY
);

CREATE TABLE Products
(id INT NOT NULL PRIMARY KEY,
seller_id INTEGER NOT NULL REFERENCES Sellers(seller_id),
name VARCHAR(255) NOT NULL,
description VARCHAR NOT NULL,
category VARCHAR NOT NULL REFERENCES Category(category),
image BYTEA NOT NULL,
price DECIMAL NOT NULL,
available BOOLEAN DEFAULT TRUE,
available_quantity INTEGER NOT NULL
);

CREATE TABLE Cart
(buyer_id INTEGER NOT NULL PRIMARY KEY REFERENCES Users(id),
product_id INTEGER NOT NULL UNIQUE REFERENCES Products(id),
quantity INTEGER NOT NULL
);

CREATE TABLE Purchases
(id INTEGER NOT NULL PRIMARY KEY,
 uid INTEGER NOT NULL REFERENCES Users(id),
 seller_id INTEGER NOT NULL REFERENCES Sellers(seller_id),
 time_purchased TIMESTAMP without time zone NOT NULL DEFAULT (current_timestamp AT TIME ZONE 'UTC'),
 pid INTEGER NOT NULL REFERENCES Products(id),
 quantity INTEGER NOT NULL,
 total_price DECIMAL NOT NULL,
 fulfilled VARCHAR(256)
 CHECK(CASE
	WHEN fulfilled = 'f' THEN TRUE
	WHEN fulfilled = 'nf' THEN TRUE
	ELSE FALSE
       END
 )
);

CREATE TABLE SellerReviews
(seller_id INTEGER NOT NULL REFERENCES Sellers(seller_id),
 buyer_id INTEGER NOT NULL REFERENCES Users(id),
 rating INTEGER NOT NULL CHECK(rating BETWEEN 0 AND 5),
 comment VARCHAR(512) NOT NULL,
 PRIMARY KEY(seller_id, buyer_id)
);

CREATE TABLE ProductReviews
(product_id INTEGER NOT NULL REFERENCES Products(id),
 buyer_id INTEGER NOT NULL REFERENCES Users(id),
 rating INTEGER NOT NULL CHECK(rating BETWEEN 0 AND 5),
 comment VARCHAR(512) NOT NULL,
 PRIMARY KEY(product_id, buyer_id)
 );
